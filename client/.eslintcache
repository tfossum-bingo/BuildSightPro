[{"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/index.js":"1","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/App.js":"2","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Router.js":"3","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/UserService.js":"4","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/ApiClient.js":"5","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/LandingPage.js":"6","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignUpPage.js":"7","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignInPage.js":"8","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/TextInput.js":"9","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Button.js":"10","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/ProtectedRoute.js":"11","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/HomePage.js":"12","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/SignOut.js":"13","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsitesList.js":"14","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitePage.js":"15","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/JobsiteService.js":"16","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationsList.js":"17","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationCard.js":"18","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteCard.js":"19","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/SimpleMap.js":"20","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteForm.js":"21","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/modals/Modal.js":"22","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/SpecificationService.js":"23","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Header.js":"24","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationForm.js":"25"},{"size":320,"mtime":1609796607644,"results":"26","hashOfConfig":"27"},{"size":181,"mtime":1609794645672,"results":"28","hashOfConfig":"27"},{"size":2643,"mtime":1609905995966,"results":"29","hashOfConfig":"27"},{"size":1226,"mtime":1609803638487,"results":"30","hashOfConfig":"27"},{"size":221,"mtime":1609793943519,"results":"31","hashOfConfig":"27"},{"size":758,"mtime":1609807623758,"results":"32","hashOfConfig":"27"},{"size":3294,"mtime":1609861878698,"results":"33","hashOfConfig":"27"},{"size":2820,"mtime":1609803039826,"results":"34","hashOfConfig":"27"},{"size":476,"mtime":1609802668116,"results":"35","hashOfConfig":"27"},{"size":602,"mtime":1609802825623,"results":"36","hashOfConfig":"27"},{"size":351,"mtime":1609813934453,"results":"37","hashOfConfig":"27"},{"size":1749,"mtime":1610000595286,"results":"38","hashOfConfig":"27"},{"size":922,"mtime":1609812392588,"results":"39","hashOfConfig":"27"},{"size":629,"mtime":1609942859816,"results":"40","hashOfConfig":"27"},{"size":3712,"mtime":1610000147257,"results":"41","hashOfConfig":"27"},{"size":854,"mtime":1609861616762,"results":"42","hashOfConfig":"27"},{"size":693,"mtime":1609948552725,"results":"43","hashOfConfig":"27"},{"size":2302,"mtime":1609994430489,"results":"44","hashOfConfig":"27"},{"size":1198,"mtime":1609942986683,"results":"45","hashOfConfig":"27"},{"size":1221,"mtime":1609959562497,"results":"46","hashOfConfig":"27"},{"size":4018,"mtime":1610000668566,"results":"47","hashOfConfig":"27"},{"size":397,"mtime":1609900111236,"results":"48","hashOfConfig":"27"},{"size":562,"mtime":1609995139883,"results":"49","hashOfConfig":"27"},{"size":544,"mtime":1609958108548,"results":"50","hashOfConfig":"27"},{"size":3469,"mtime":1610029975916,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1lbwt04",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/index.js",[],["116","117"],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/App.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Router.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/UserService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/ApiClient.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/LandingPage.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignUpPage.js",["118","119","120"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// import Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport { __RegisterUser } from '../services/UserService';\n// import '../styles/SignUp.css'\n// import '../styles/Button.css'\n\nconst SignUpPage = (props) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [formError, setFormError] = useState(false);\n\n  const formFieldChange = (e) => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    switch (fieldName) {\n      case 'firstName':\n        setFirstName(fieldValue);\n        break;\n      case 'lastName':\n        setlastName(fieldValue);\n        break;\n      case 'email':\n        setEmail(fieldValue);\n        break;\n      case 'password':\n        setPassword(fieldValue);\n        break;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formState = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      zipCode: zipCode,\n    };\n    try {\n      const accountResponse = await __RegisterUser(formState);\n      props.setUser(accountResponse)\n      props.history.push('/home');\n    } catch (error) {\n      setFormError(true);\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n        <h1>Sign Up</h1>\n        <div className='form-inputs'>\n          <label htmlFor='firtName' >\n            First Name\n            <TextInput\n              type='text'\n              name='firstName'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='lastName' >\n            Last Name\n            <TextInput\n              type='text'\n              name='lastName'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='email' className='form-label'>\n            Email\n            <TextInput\n              type='text'\n              name='email'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='password' className='form-label'>\n            Password\n            <TextInput\n              type='text'\n              name='password'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div>\n          <button\n            className='btns'\n            buttonStyle='btn--outline'\n            buttonSize='btn--large'\n          >\n            Submit\n          </button>\n        </div>\n        <div>\n        <NavLink to='/signin' activeclassName='nav-active'>\n        <p>Have an account?</p>\n        </NavLink>\n      </div>\n      </form>\n      \n    </div>\n  );\n};\nexport default SignUpPage;\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignInPage.js",["121"],"import React, {useState} from 'react';\nimport TextInput from '../components/TextInput';\nimport { __LoginUser } from '../services/UserService';\n// import '../styles/Button.css'\n// import '../styles/SignUp.css'\n\nconst SignInPage = (props) => {\n    const {setUser} = props\n    const [loginValue, setLoginValue] = useState('');\n    const [passwordValue, setPasswordValue] = useState('');\n    const [formError, setFormError] = useState(false);\n\n    const emailField = (e) => {\n        setLoginValue(e.target.value);\n        console.log('Email: ', loginValue);\n    };\n\n    const passwordField = (e) => {\n        setPasswordValue(e.target.value);\n        console.log('Password: ', passwordValue);\n    };\n\n    const handleSubmit = async (event) => {\n        console.log('HIT handleLogin Submit', loginValue, passwordValue);\n        event.preventDefault();\n        try {\n            const userData = {email: loginValue, password: passwordValue};\n            const loginResponse = await __LoginUser(userData);\n            console.log('Login Response: ', loginResponse === undefined);\n            if (loginResponse !== \"\") {\n                setUser(loginResponse)\n                props.history.push('/home');\n            }\n        } catch (error) {\n            setFormError(true);\n        }\n    };\n\n\n    return (\n        <div className='form-container'>\n            <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n            <h1>Sign In</h1>\n                <div className='form-inputs'>\n                    <label htmlFor='email' className='form-label'>\n                        Email\n                        <TextInput\n                            className='form-input'\n                            placeholder='email'\n                            name='email'\n                            type='email'\n                            onChange={emailField}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='password' className='form-label'>\n                        Password\n                        <TextInput\n                            className='form-input'\n                            placeholder='password'\n                            name='password'\n                            type='password'\n                            onChange={passwordField}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <button\n                        className='btns'\n                        buttonStyle='btn--outline'\n                        buttonSize='btn--large'\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n\n        </div>\n    );\n};\n\nexport default SignInPage;\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/TextInput.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Button.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/ProtectedRoute.js",["122"],"import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport default ({ authenticated, children, component: Component, ...rest }) => {\n  console.log(\"Protected Authenticated: \", authenticated)\n  return authenticated === true ? (\n    <Route {...rest} component={Component}>\n    </Route>\n  ) : (\n      <Redirect to=\"/\" />\n    )\n}","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/HomePage.js",["123","124","125","126"],"import React, { useState, useEffect } from 'react';\n\nimport Header from '../components/Header'\nimport JobsiteList from '../components/jobsites/JobsitesList'\nimport JobsiteForm from '../components/jobsites/JobsiteForm'\nimport Modal from '../components/modals/Modal'\n\n\nexport default (props) => {\n    const { user, onClickSignOut, setNeedsRefresh } = props;\n    console.log(\"HIT Homepage: \", user)\n    const [displayJobsiteModal, setDisplayModal] = useState(false)\n\n    const toggleJobsiteModal = () => {\n        setDisplayModal(!displayJobsiteModal)\n    }\n\n\n    if (user !== null && user !== undefined && user.Company !== undefined) {\n        { console.log(\"Has User: \", user) }\n        return (\n            <div className={'home-container-grid'}>\n                <Header user={user} onClickSignOut={onClickSignOut}/>\n                <div className=\"create-task-button\">\n                    <button\n                        onClick={e => toggleJobsiteModal()} >\n                        New Jobsite\n                            </button>\n                    <Modal show={displayJobsiteModal}>\n                        <JobsiteForm\n                            onClick={toggleJobsiteModal}\n                            companyId={user.company_id}\n                            userId={user.id}\n                            toggleJobsiteModal={toggleJobsiteModal}\n                            setNeedsRefresh={setNeedsRefresh}\n                            {...props} />\n                    </Modal>\n                </div>\n                <div>\n                    <JobsiteList user={user} />\n                </div>\n\n            </div>\n        );\n    } else {\n        { setNeedsRefresh(true) }\n        return (\n            <div>Loading...</div>\n        )\n    }\n};\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/SignOut.js",["127","128"],"import React, { useState } from \"react\";\nimport { Redirect } from 'react-router'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default ({ children, type, onClick, buttonStyle, buttonSize }) => {\n    const [signedOut, setSignedOut] = useState(false)\n\n    const clearUser = () => {\n        localStorage.clear(\"user_id\")\n        onClick()\n        setSignedOut(true)\n    }\n\n    if (signedOut) {\n        {console.log(\"HIT Signed Out\")}\n        < Redirect to='/' push={true} />\n    } else {\n        return (\n            <button\n                className={'btn-list'}\n                onClick={(e) => clearUser()}\n            >\n                <FontAwesomeIcon\n                    className=\"fas fa-white\"\n                    icon={faSignOutAlt}\n                    inverse\n                />\n            </button>\n        );\n    }\n};\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsitesList.js",["129"],"import React from 'react';\nimport JobsiteCard from './JobsiteCard';\n\nexport default (props) => {\n  const { setNeedsRefresh, user } = props\n  const { jobsites } = props.user.Company\n\n  if (jobsites !== null && jobsites !== undefined && jobsites.length > 0) {\n    return (\n      <div>\n        {jobsites.map((jobsite, index) => {\n          return (\n            <JobsiteCard\n              jobsite={jobsite}\n              key={index}\n              history={props.history}\n              setNeedsRefresh={setNeedsRefresh}\n              user={user} />\n          )\n        })\n        }\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitePage.js",["130","131"],"import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { __GetJobsite } from '../services/JobsiteService'\n\nimport Header from '../components/Header'\nimport Modal from '../components/modals/Modal'\nimport SimpleMap from '../components/jobsites/SimpleMap'\nimport SpecificationsList from '../components/specifications/SpecificationsList'\nimport SpecificationForm from '../components/specifications/SpecificationForm'\n\n// import JobsiteList from '../components/jobsites/JobsitesList'\nimport SignOut from '../components/SignOut';\n\nconst JobsitePage = (props) => {\n    const { user, onClickSignOut, setNeedsRefresh } = props;\n    // const { onClickSignOut, user } = props;\n    const jobsite_id = parseInt(props.match.params.jobsite_id)\n    const [displaySpecForm, setDisplaySpecForm] = useState(false)\n    const [jobsite, setJobsite] = useState(null)\n    console.log(\"HIT JobsitePage\", jobsite)\n\n    useEffect(() => {\n        if (jobsite == null) {\n            console.log('HIT JobsitePage useEffect')\n            findJobsite(jobsite_id)\n        }\n    }, [])\n\n    const findJobsite = async (jobsite_id) => {\n        const jobsite = await __GetJobsite(jobsite_id)\n        try {\n            setJobsite(jobsite)\n            console.log('findJobsite: ', jobsite)\n        } catch (error) {\n            console.log(\"Jobsite Retrieval Error: \", error)\n        }\n    }\n\n    const toggleSpecForm = () => {\n        setDisplaySpecForm(!displaySpecForm)\n    }\n\n    if (jobsite !== null && jobsite !== undefined) {\n        return (\n            <div className={'flex-column'}>\n                {console.log('Jobsite: ', jobsite)}\n                <Header onClickSignOut={onClickSignOut} user={user} />\n\n                <div className='jobsite-main'>\n                    <div className='jobsite-address-container'>\n                        <div className='map-container'>\n                            <SimpleMap center={{ lat: jobsite.latitude, lng: jobsite.longitude }} zoom={15} />\n                        </div>\n                        <div className='address-container'>\n                            <p>{jobsite.address_1}</p>\n                            <p>{jobsite.address_2}</p>\n                            <p>{`${jobsite.city}, ${jobsite.state} ${jobsite.postalCode}`} </p>\n                        </div>\n                        <div className=\"add-spec-container\">\n                            <button\n                                onClick={e => toggleSpecForm()} >\n                                Add Specification Doc\n                            </button>\n                            <Modal show={displaySpecForm}>\n                                <SpecificationForm\n                                    jobsiteId={jobsite.id}\n                                    userId={user.id}\n                                    toggleModal={toggleSpecForm}\n                                    setNeedsRefresh={setNeedsRefresh}\n                                    {...props} />\n                            </Modal>\n                        </div>\n                    </div>\n                    <div>\n                        <SpecificationsList\n                            jobsite={jobsite}\n                            setNeedsRefresh={setNeedsRefresh}\n                            user={user} />\n                    </div>\n                    <div>\n                        <NavLink to='/home' activeclassName='nav-active'>\n                            <p>All Jobsites</p>\n                        </NavLink>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>Loading...</div>\n        )\n    }\n};\n\nexport default JobsitePage","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/JobsiteService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationsList.js",["132"],"import React from 'react';\nimport SpecificationCard from './SpecificationCard';\n\nexport default (props) => {\n  //   const { setNeedsRefresh } = props\n  const { setNeedsRefresh, user } = props\n  const { specifications } = props.jobsite\n\n  if (specifications !== null && specifications !== undefined && specifications.length > 0) {\n    return (\n      <div>\n        {specifications.map((specification, index) => {\n          return (\n            <SpecificationCard\n              specification={specification}\n              setNeedsRefresh={setNeedsRefresh}\n              user={user}\n              key={index} />\n          )\n        })\n        }\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationCard.js",["133","134","135","136"],"import React from 'react'\n// import Button from '../Button'\nimport { __AcknowledgeSpecification } from '../../services/SpecificationService'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n\n// Import ToDo Update Service\n// Import Todo Delete Service\n\nexport default (props) => {\n    // const { jobsite, setNeedsRefresh } = props\n    const { setNeedsRefresh, specification, user } = props\n\n\n    const acknowledgeSpecification = async () => {\n        console.log('HIT AckSpec User: ', user)\n        const data = {\n            userId: user.id,\n            specificationId: specification.id\n        }\n        console.log('HIT AckSpec: ', data)\n        try {\n            const ackResponse = await __AcknowledgeSpecification(data)\n            setNeedsRefresh(true)\n            return true\n        } catch (error) {\n            console.log('AckSpec error: ', error)\n        }\n    }\n\n    const imageLink = () => {\n        console.log(\"HIT imageLink: \", specification.attachmentUrl)\n        if(specification.attachmentUrl !== null && specification.attachmentUrl !== \"\"){\n            return (\n                <a href={specification.attachmentUrl}>Link</a>\n            )\n        }\n        return null\n    }\n\n    const isAcknowledged = () => {\n        const specUser = specification.specification_users.find(spec => spec.user_id == user.id)\n        console.log('isAck: ', specUser, specification.specification_users)\n        console.log('isAck2: ', specUser)\n        if (specUser !== undefined) {\n            return (\n                <FontAwesomeIcon\n                    className=\"fas fa-white\"\n                    style={{color: \"green\"}}\n                    icon={faCheckCircle}\n                />\n            )\n        }\n        return (\n            <button onClick={(e) => acknowledgeSpecification()}>Acknowledge</button>\n        )\n    }\n\n    if (specification !== null && specification !== undefined) {\n        return (\n            <div className=\"spec-container\">\n                <h3>{specification.title}</h3>\n                <p>{specification.description}</p>\n                {imageLink()}\n                <h2>{isAcknowledged()}</h2>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteCard.js",["137","138"],"import React from 'react'\n// import Button from '../Button'\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\n// Import ToDo Update Service\n// Import Todo Delete Service\n\nexport default (props) => {\n    // const { jobsite, setNeedsRefresh } = props\n    const { jobsite, user } = props\n    let history = useHistory()\n    console.log(\"Jobsite props: \", history)\n\n    // const deleteTodo = async (e) => {\n    //     console.log(\"HIT deleteTodo: \", todo)\n    //     try{\n    //         await __DeleteTodo(todo.id)\n    //         setNeedsRefresh(true)\n    //     } catch(error) {\n    //         console.log(error)\n    //     }\n    // }\n\n    \n    if (jobsite !== null && jobsite !== undefined) {\n        return (\n            <div>\n                {jobsite.address_1}\n                <FontAwesomeIcon\n                    className=\"fas fa-white\"\n                    icon={faTimesCircle}\n                />\n                <button onClick={() => history.push(`/jobsites/${jobsite.id}`)}>Read More</button>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/SimpleMap.js",["139"],"import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faWrench } from \"@fortawesome/free-solid-svg-icons\";\n \nconst AnyReactComponent = ({ text }) => <div style={{color: 'red', fontWeight: \"bold\"}}>\n                  <FontAwesomeIcon\n                className=\"fas fa-white\"\n                icon={faWrench}\n            />\n</div>;\n \nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 40.73,\n      lng: -73.93\n    },\n    zoom: 15\n  };\n \n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      // <div style={{ height: '75vh', width: '50%' }}>\n      <div className='jobsite-map'>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD85Z18nGa_s6LWTdVZCmozaVWFRqHM8KQ', language: 'en' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={this.props.center.lat}\n            lng={this.props.center.lng}\n            // text=\"Jobsite\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n \nexport default SimpleMap;","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteForm.js",["140","141","142"],"import React, { useState } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\n\n// import Button from '../components/Button';\nimport TextInput from '../TextInput';\nimport { __CreateJobsite } from '../../services/JobsiteService';\n// import '../styles/SignUp.css'\n// import '../styles/Button.css'\n\nconst JobsiteForm = (props) => {\n    let history = useHistory()\n    const { toggleJobsiteModal } = props\n    const [form, setForm] = useState({\n        address_1: '',\n        address_2: '',\n        city: '',\n        state: '',\n        postalCode: '',\n        clientName: '',\n        user_id: props.userId,\n        company_id: props.companyId\n    })\n\n\n\n    const [formError, setFormError] = useState(false);\n\n    const formFieldChange = (e) => {\n        const fieldName = e.target.name;\n        const fieldValue = e.target.value;\n\n        setForm({ ...form, [fieldName]: fieldValue })\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const jobsiteResponse = await __CreateJobsite(form);\n            props.toggleModal()\n            props.setNeedsRefresh(true)\n            history.push('/home');\n        } catch (error) {\n            setFormError(true);\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n                <h1>Create Jobsite</h1>\n                <div className='form-inputs'>\n                    <label htmlFor='address_1' >\n                        Address 1\n            <TextInput\n                            type='text'\n                            name='address_1'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='address_2' >\n                        Address 2\n            <TextInput\n                            type='text'\n                            name='address_2'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='city' className='form-label'>\n                        City\n            <TextInput\n                            type='text'\n                            name='city'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='state' className='form-label'>\n                        State\n                    <TextInput\n                            type='text'\n                            name='state'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='clientName' className='form-label'>\n                        Client Name\n            <TextInput\n                            type='text'\n                            name='clientName'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <button\n                        className='btns'\n                        buttonStyle='btn--outline'\n                        buttonSize='btn--large'\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n            <button onClick={toggleJobsiteModal}>Close</button>\n        </div>\n    );\n};\nexport default JobsiteForm;\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/modals/Modal.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/SpecificationService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Header.js",["143"],"import React from 'react'\nimport SignOut from '../components/SignOut'\n\nexport default (props) => {\n    const { onClickSignOut, user } = props\n\n    if (user !== null && user !== undefined) {\n        return (\n            <div className='header'>\n                <div className=\"flex-row header-row\">\n                    <h1>JobSitePro</h1>\n                    <div>\n                        <SignOut onClick={onClickSignOut} />\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return null\n    }\n}","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationForm.js",["144","145","146","147","148"],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":15,"column":19,"nodeType":"155","messageId":"156","endLine":15,"endColumn":29},{"ruleId":"153","severity":1,"message":"157","line":16,"column":10,"nodeType":"155","messageId":"156","endLine":16,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":21,"column":5,"nodeType":"160","messageId":"161","endLine":34,"endColumn":6},{"ruleId":"153","severity":1,"message":"157","line":11,"column":12,"nodeType":"155","messageId":"156","endLine":11,"endColumn":21},{"ruleId":"162","severity":1,"message":"163","line":4,"column":1,"nodeType":"164","endLine":12,"endColumn":2},{"ruleId":"153","severity":1,"message":"165","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":9,"column":1,"nodeType":"164","endLine":51,"endColumn":3},{"ruleId":"166","severity":1,"message":"167","line":20,"column":9,"nodeType":"168","messageId":"169","endLine":20,"endColumn":44},{"ruleId":"166","severity":1,"message":"167","line":46,"column":9,"nodeType":"168","messageId":"169","endLine":46,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":7,"column":1,"nodeType":"164","endLine":33,"endColumn":3},{"ruleId":"166","severity":1,"message":"167","line":17,"column":9,"nodeType":"168","messageId":"169","endLine":17,"endColumn":40},{"ruleId":"162","severity":1,"message":"163","line":4,"column":1,"nodeType":"164","endLine":27,"endColumn":2},{"ruleId":"153","severity":1,"message":"170","line":12,"column":8,"nodeType":"155","messageId":"156","endLine":12,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":27,"column":8,"nodeType":"173","endLine":27,"endColumn":10,"suggestions":"174"},{"ruleId":"162","severity":1,"message":"163","line":4,"column":1,"nodeType":"164","endLine":27,"endColumn":2},{"ruleId":"153","severity":1,"message":"175","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":11,"column":1,"nodeType":"164","endLine":72,"endColumn":2},{"ruleId":"153","severity":1,"message":"176","line":24,"column":19,"nodeType":"155","messageId":"156","endLine":24,"endColumn":30},{"ruleId":"177","severity":1,"message":"178","line":43,"column":86,"nodeType":"179","messageId":"180","endLine":43,"endColumn":88},{"ruleId":"162","severity":1,"message":"163","line":10,"column":1,"nodeType":"164","endLine":41,"endColumn":2},{"ruleId":"153","severity":1,"message":"181","line":12,"column":22,"nodeType":"155","messageId":"156","endLine":12,"endColumn":26},{"ruleId":"153","severity":1,"message":"175","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":23},{"ruleId":"153","severity":1,"message":"182","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":27,"column":12,"nodeType":"155","messageId":"156","endLine":27,"endColumn":21},{"ruleId":"153","severity":1,"message":"183","line":40,"column":19,"nodeType":"155","messageId":"156","endLine":40,"endColumn":34},{"ruleId":"162","severity":1,"message":"163","line":4,"column":1,"nodeType":"164","endLine":21,"endColumn":2},{"ruleId":"153","severity":1,"message":"182","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"184","line":11,"column":9,"nodeType":"155","messageId":"156","endLine":11,"endColumn":16},{"ruleId":"153","severity":1,"message":"157","line":13,"column":12,"nodeType":"155","messageId":"156","endLine":13,"endColumn":21},{"ruleId":"153","severity":1,"message":"185","line":13,"column":23,"nodeType":"155","messageId":"156","endLine":13,"endColumn":35},{"ruleId":"153","severity":1,"message":"183","line":42,"column":15,"nodeType":"155","messageId":"156","endLine":42,"endColumn":30},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"no-unused-vars","'setZipCode' is assigned a value but never used.","Identifier","unusedVar","'formError' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'SignOut' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'jobsite' and 'jobsite_id'. Either include them or remove the dependency array.","ArrayExpression",["188"],"'faTimesCircle' is defined but never used.","'ackResponse' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'NavLink' is defined but never used.","'jobsiteResponse' is assigned a value but never used.","'history' is assigned a value but never used.","'setFormError' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},"Update the dependencies array to be: [jobsite, jobsite_id]",{"range":"191","text":"192"},[1096,1098],"[jobsite, jobsite_id]"]