[{"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/index.js":"1","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/App.js":"2","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/index.js":"3","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Router.js":"4","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/JobsiteReducer.js":"5","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/UserReducer.js":"6","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/SpecificationReducer.js":"7","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/ProtectedRoute.js":"8","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitePage.js":"9","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitesPage.js":"10","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignInPage.js":"11","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/LandingPage.js":"12","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignUpPage.js":"13","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/types.js":"14","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Header.js":"15","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Button.js":"16","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/TextInput.js":"17","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/JobsiteActions.js":"18","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/UserActions.js":"19","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsitesList.js":"20","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteForm.js":"21","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationForm.js":"22","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationsList.js":"23","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/SimpleMap.js":"24","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/modals/Modal.js":"25","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/UserService.js":"26","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/SignOut.js":"27","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationCard.js":"28","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteCard.js":"29","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/JobsiteService.js":"30","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/ApiClient.js":"31","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/SpecificationService.js":"32","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/SpecificationActions.js":"33"},{"size":431,"mtime":1610114388647,"results":"34","hashOfConfig":"35"},{"size":181,"mtime":1609794645672,"results":"36","hashOfConfig":"35"},{"size":568,"mtime":1610114388649,"results":"37","hashOfConfig":"35"},{"size":1819,"mtime":1610114388644,"results":"38","hashOfConfig":"35"},{"size":1666,"mtime":1610132507587,"results":"39","hashOfConfig":"35"},{"size":1158,"mtime":1610132507588,"results":"40","hashOfConfig":"35"},{"size":399,"mtime":1610132507587,"results":"41","hashOfConfig":"35"},{"size":351,"mtime":1609813934453,"results":"42","hashOfConfig":"35"},{"size":3615,"mtime":1610134485274,"results":"43","hashOfConfig":"35"},{"size":1860,"mtime":1610114388647,"results":"44","hashOfConfig":"35"},{"size":3077,"mtime":1610114388647,"results":"45","hashOfConfig":"35"},{"size":758,"mtime":1609807623758,"results":"46","hashOfConfig":"35"},{"size":3294,"mtime":1609861878698,"results":"47","hashOfConfig":"35"},{"size":870,"mtime":1610132507589,"results":"48","hashOfConfig":"35"},{"size":356,"mtime":1610132507581,"results":"49","hashOfConfig":"35"},{"size":602,"mtime":1609802825623,"results":"50","hashOfConfig":"35"},{"size":476,"mtime":1609802668116,"results":"51","hashOfConfig":"35"},{"size":2228,"mtime":1610132507586,"results":"52","hashOfConfig":"35"},{"size":1540,"mtime":1610114388649,"results":"53","hashOfConfig":"35"},{"size":1151,"mtime":1610114388646,"results":"54","hashOfConfig":"35"},{"size":4404,"mtime":1610132734879,"results":"55","hashOfConfig":"35"},{"size":3494,"mtime":1610132507583,"results":"56","hashOfConfig":"35"},{"size":903,"mtime":1610132507584,"results":"57","hashOfConfig":"35"},{"size":1236,"mtime":1610115059333,"results":"58","hashOfConfig":"35"},{"size":397,"mtime":1609900111236,"results":"59","hashOfConfig":"35"},{"size":1184,"mtime":1610114388648,"results":"60","hashOfConfig":"35"},{"size":1093,"mtime":1610132507582,"results":"61","hashOfConfig":"35"},{"size":2254,"mtime":1610134912451,"results":"62","hashOfConfig":"35"},{"size":786,"mtime":1610114388645,"results":"63","hashOfConfig":"35"},{"size":1106,"mtime":1610114388648,"results":"64","hashOfConfig":"35"},{"size":221,"mtime":1609793943519,"results":"65","hashOfConfig":"35"},{"size":562,"mtime":1609995139883,"results":"66","hashOfConfig":"35"},{"size":959,"mtime":1610132507586,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1lbwt04",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"70"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"70"},"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/index.js",[],["151","152"],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/App.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/index.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Router.js",["153"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { Switch, Route } from 'react-router-dom'\n\nimport JobsitesPage from '../pages/JobsitesPage';\nimport JobsitePage from '../pages/JobsitePage'\nimport LandingPage from '../pages/LandingPage';\nimport ProtectedRoute from './ProtectedRoute'\nimport SignInPage from '../pages/SignInPage';\nimport SignUpPage from '../pages/SignUpPage';\n\n\n\nimport '../styles/App.css';\n\nconst Router = (props) => {\n    \n    return (\n        <main>\n            <Switch>\n                <Route exact path='/' component={(props) => <LandingPage />} />\n                <Route\n                    exact\n                    path='/register'\n                    component={(props) => <SignUpPage />}\n                />\n                <Route\n                    exact\n                    path='/signin'\n                    component={(props) => <SignInPage />}\n                />\n                <ProtectedRoute\n                    authenticated={props.userState.user !== null}\n                    exact path='/jobsites'\n                    component={(props) => (\n                        <JobsitesPage />\n                    )}\n                />\n                <ProtectedRoute\n                    authenticated={props.userState.user !== null}\n                    exact path='/jobsites/:jobsite_id'\n                    component={(props) => (\n                        <JobsitePage {...props} />\n                    )}\n                />\n            </Switch>\n        </main>\n    )\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n\n    }\n  }\n  \n  const mapStateToProps = (state) => {\n    // console.log('MapStateToProps: ', state)\n    return {\n        userState: state.userState\n    }\n  }\n  \n  export default connect(mapStateToProps, mapActionsToProps)(Router)","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/JobsiteReducer.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/UserReducer.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/reducers/SpecificationReducer.js",["154"],"const {\n  ACKNOWLEDGE_SPECIFICATION\n} = require('../types')\n\nconst iState = {\n  // jobsitesLoading: '', // Should be type enum('Loading', 'Loaded', 'Inactive'),\n}\n\nconst JobsiteReducer = (state = iState, action) => {\n  switch (action.type) {\n    // case GET_ENTITIES:\n    //   return { ...state, jobsites: action.payload }\n    default:\n      return { ...state }\n  }\n}\n\nexport default JobsiteReducer\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/ProtectedRoute.js",["155"],"import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\n\nexport default ({ authenticated, children, component: Component, ...rest }) => {\n  console.log(\"Protected Authenticated: \", authenticated)\n  return authenticated === true ? (\n    <Route {...rest} component={Component}>\n    </Route>\n  ) : (\n      <Redirect to=\"/\" />\n    )\n}","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitePage.js",["156","157"],"import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\n\nimport { getJobsite, hideSpecForm , showSpecForm } from '../store/actions/JobsiteActions'\n\nimport Header from '../components/Header'\nimport Modal from '../components/modals/Modal'\nimport SimpleMap from '../components/jobsites/SimpleMap'\nimport SpecificationsList from '../components/specifications/SpecificationsList'\nimport SpecificationForm from '../components/specifications/SpecificationForm'\n\nconst JobsitePage = (props) => {\n    const jobsite_id = parseInt(props.match.params.jobsite_id)\n    console.log('JPage: jobsite_id: ', jobsite_id)\n    let x = 0\n\n    useEffect(() => {\n        if (props.jobsiteState.refreshJobsite || (props.jobsiteState.jobsite !== null && props.jobsiteState.jobsite.id !== jobsite_id)) {\n            props.getJobsite(jobsite_id)\n        }\n    }, [props.jobsiteState.refreshJobsite, props.specificationState.displaySpecForm])\n\n    \n    if (props.jobsiteState.jobsite !== null && props.jobsiteState.jobsite !== undefined) {\n        return (\n            <div className={'flex-column'}>\n                {console.log('Jobsite: ', props.jobsite)}\n                <Header />\n\n                <div className='jobsite-main'>\n                    <div className='jobsite-address-container'>\n                        <div className='map-container'>\n                            <SimpleMap center={{ lat: props.jobsiteState.jobsite.latitude, lng: props.jobsiteState.jobsite.longitude }} zoom={15} />\n                        </div>\n                        <div className='address-container'>\n                            <p>{props.jobsiteState.jobsite.address_1}</p>\n                            <p>{props.jobsiteState.jobsite.address_2}</p>\n                            <p>{`${props.jobsiteState.jobsite.city}, ${props.jobsiteState.jobsite.state} ${props.jobsiteState.jobsite.postalCode}`} </p>\n                        </div>\n                        <div className=\"add-spec-container\">\n                            <button\n                                onClick={e => props.showSpecForm()} >\n                                Add Specification Doc\n                            </button>\n                            <Modal show={props.jobsiteState.displaySpecForm}>\n                                <SpecificationForm\n                                    jobsiteId={props.jobsiteState.jobsite.id}\n                                    userId={props.userState.user.id}\n                                />\n                            </Modal>\n                        </div>\n                    </div>\n                    <div>\n                        <SpecificationsList />\n                    </div>\n                    <div>\n                        <NavLink to='/jobsites' activeclassName='nav-active'>\n                            <p>All Jobsites</p>\n                        </NavLink>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div>Loading...</div>\n        )\n    }\n}\n\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        getJobsite: (jobsiteId) => dispatch(getJobsite(jobsiteId)),\n        hideSpecForm: () => dispatch(hideSpecForm()),\n        showSpecForm: () => dispatch(showSpecForm())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jobsiteState: state.jobsiteState,\n        specificationState: state.specificationState,\n        userState: state.userState,\n        user: state.userState.user\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(JobsitePage)","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/JobsitesPage.js",["158"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\n\nimport Header from '../components/Header'\nimport JobsiteList from '../components/jobsites/JobsitesList'\nimport JobsiteForm from '../components/jobsites/JobsiteForm'\nimport Modal from '../components/modals/Modal'\nimport { getUser} from '../store/actions/UserActions'\n\n\nconst JobsitesPage = (props) => {\n    const [displayJobsiteModal, setDisplayModal] = useState(false)\n\n    const toggleJobsiteModal = () => {\n        setDisplayModal(!displayJobsiteModal)\n    }\n\n    return (\n        <div className={'home-container-grid'}>\n            <Header />\n            <div className=\"create-task-button\">\n                <button\n                    onClick={e => toggleJobsiteModal()} >\n                    New Jobsite\n                            </button>\n                <Modal show={displayJobsiteModal}>\n                    <JobsiteForm\n                        onClick={toggleJobsiteModal}\n                        toggleJobsiteModal={toggleJobsiteModal}\n                        {...props} />\n                </Modal>\n            </div>\n            <div>\n                <JobsiteList />\n            </div>\n\n        </div>\n    )\n}\n\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        getUser: () => dispatch(getUser())\n        // loginForm: (formFields) => dispatch(FormEntry(formFields)),\n        // loginUser: () => dispatch(loginUser())\n        // completeTodo: (index) => dispatch(CompleteTodo(index)),\n        // createTodo: (formValue) => dispatch(CreateNewTodo(formValue)),\n        // removeTodo: (index) => dispatch(RemoveTodo(index))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log('MapStateToProps: ', state)\n    return {\n        userState: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(JobsitesPage)","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignInPage.js",["159","160"],"import React, { useEffect, useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport TextInput from '../components/TextInput';\nimport { loginUser, updateLoginForm } from '../store/actions/UserActions'\n\n\nconst SignInPage = (props) => {\n\n    const handleChange = (event) => {\n        console.log('HIT SI handleChange: ', event.target.value)\n        \n        props.loginForm(event.target.name, event.target.value)\n    }\n\n    const handleSubmit = async (event) => {\n        console.log('HIT handleLogin Submit', props.userState);\n        event.preventDefault();\n        const userData = {email: props.userState.email, password: props.userState.password}\n        props.loginUser(userData)\n    }\n\n\n    return props.userState.user === null ? (\n        <div className='form-container'>\n            <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n                <h1>Sign In</h1>\n                <div className='form-inputs'>\n                    <label htmlFor='email' className='form-label'>\n                        Email\n                        <TextInput\n                            className='form-input'\n                            placeholder='email'\n                            name='email'\n                            type='email'\n                            value={props.userState.email}\n                            onChange={handleChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='password' className='form-label'>\n                        Password\n                        <TextInput\n                            className='form-input'\n                            placeholder='password'\n                            name='password'\n                            type='password'\n                            value={props.userState.password}\n                            onChange={handleChange}\n                        />\n                    </label>\n                </div>\n                <div>\n                    <button\n                        className='btns'\n                        buttonStyle='btn--outline'\n                        buttonSize='btn--large'\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n\n        </div>\n    ) : (\n        <Redirect to=\"/jobsites\" />\n     )\n}\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n\n        loginForm: (name, value) => dispatch(updateLoginForm(name, value)),\n        loginUser: (formValues) => dispatch(loginUser(formValues))\n        // completeTodo: (index) => dispatch(CompleteTodo(index)),\n        // createTodo: (formValue) => dispatch(CreateNewTodo(formValue)),\n        // removeTodo: (index) => dispatch(RemoveTodo(index))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    // console.log('MapStateToProps: ', state)\n    return {\n        userState: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignInPage)\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/LandingPage.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/pages/SignUpPage.js",["161","162","163"],"import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// import Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport { __RegisterUser } from '../services/UserService';\n// import '../styles/SignUp.css'\n// import '../styles/Button.css'\n\nconst SignUpPage = (props) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setlastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [zipCode, setZipCode] = useState('');\n  const [formError, setFormError] = useState(false);\n\n  const formFieldChange = (e) => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    switch (fieldName) {\n      case 'firstName':\n        setFirstName(fieldValue);\n        break;\n      case 'lastName':\n        setlastName(fieldValue);\n        break;\n      case 'email':\n        setEmail(fieldValue);\n        break;\n      case 'password':\n        setPassword(fieldValue);\n        break;\n    }\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formState = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password,\n      zipCode: zipCode,\n    };\n    try {\n      const accountResponse = await __RegisterUser(formState);\n      props.setUser(accountResponse)\n      props.history.push('/home');\n    } catch (error) {\n      setFormError(true);\n    }\n  };\n\n  return (\n    <div className='form-container'>\n      <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n        <h1>Sign Up</h1>\n        <div className='form-inputs'>\n          <label htmlFor='firtName' >\n            First Name\n            <TextInput\n              type='text'\n              name='firstName'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='lastName' >\n            Last Name\n            <TextInput\n              type='text'\n              name='lastName'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='email' className='form-label'>\n            Email\n            <TextInput\n              type='text'\n              name='email'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div className='form-inputs'>\n          <label htmlFor='password' className='form-label'>\n            Password\n            <TextInput\n              type='text'\n              name='password'\n              className='form-input'\n              onChange={formFieldChange}\n            />\n          </label>\n        </div>\n        <div>\n          <button\n            className='btns'\n            buttonStyle='btn--outline'\n            buttonSize='btn--large'\n          >\n            Submit\n          </button>\n        </div>\n        <div>\n        <NavLink to='/signin' activeclassName='nav-active'>\n        <p>Have an account?</p>\n        </NavLink>\n      </div>\n      </form>\n      \n    </div>\n  );\n};\nexport default SignUpPage;\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/types.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Header.js",["164"],"import React from 'react'\n\nimport SignOut from '../components/SignOut'\n\nexport default (props) => {\n    \n    return (\n        <div className='header'>\n            <div className=\"flex-row header-row\">\n                <h1>JobSitePro</h1>\n                <div>\n                    <SignOut />\n                </div>\n            </div>\n        </div>\n    )\n\n}","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/Button.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/TextInput.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/JobsiteActions.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/UserActions.js",["165"],"import {\n  __GetProfiles,\n  __GetUser,\n  __LoginUser,\n  __LogoutUser,\n  __RegisterUser,\n  __UpdateUser\n} from '../../services/UserService'\n\nimport { \n  GET_ENTITIES, \n  GET_ENTITY, \n  CREATE_ENTITY, \n  UPDATE_ENTITY,\n  UPDATE_LOGIN_FORM,\n  LOGIN_USER,\n  LOGOUT_USER\n} from '../types'\n\nexport const getGetUsers = () => async (dispatch) => {\n  try{\n    const users = await __GetProfiles()\n    dispatch({\n      type: GET_ENTITIES,\n      payload: users\n    })\n  }catch(error){\n    throw error\n  }\n}\n\nexport const getUser = () => async (dispatch) => {\n  try{\n    const user = await __GetUser()\n    dispatch({\n      type: GET_ENTITY,\n      payload: user\n    })\n  }catch(error){\n    throw error\n  }\n}\n\nexport const createUser = () => async (dispatch) => {\n  try{\n    const user = await __RegisterUser()\n    dispatch({\n      type: CREATE_ENTITY,\n      payload: user\n    })\n  }catch(error){\n    throw error\n  }\n}\n\nexport const updateUser = () => async (dispatch) => {\n  try{\n    const user = await __UpdateUser()\n    dispatch({\n      type: UPDATE_ENTITY,\n      payload: user\n    })\n  }catch(error){\n    throw error\n  }\n}\n\nexport const updateLoginForm = (name, value) => ({\n  type: UPDATE_LOGIN_FORM,\n  payload: {\n    name,\n    value\n  }\n})\n\nexport const loginUser = (loginFormValues) => async (dispatch) => {\n  try{\n    const user = await __LoginUser(loginFormValues)\n    dispatch({\n      type: LOGIN_USER,\n      payload: user\n    })\n  }catch(error){\n    throw error\n  }\n}\n\nexport const logoutUser =  () => ({\n  type: LOGOUT_USER,\n  payload: null\n})","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsitesList.js",["166"],"import React, { useEffect} from 'react';\nimport { connect } from 'react-redux'\nimport { getCompanyJobsites } from '../../store/actions/JobsiteActions'\nimport JobsiteCard from './JobsiteCard'\n\nconst JobsiteList = (props) => {\n  \n  useEffect(() => {\n    if (props.jobsiteState.refreshJobsiteList) {\n        props.getCompanyJobsites(props.userState.user.companyId)\n    }\n}, [props.jobsiteState.refreshJobsiteList])\n\n  if (props.jobsiteState.companyJobsites.length > 0) {\n    return (\n      <div>\n        {props.jobsiteState.companyJobsites.map((jobsite, index) => {\n          return (\n            <JobsiteCard\n              jobsite={jobsite}\n              key={index}\n            />\n          )\n        })\n        }\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nconst mapActionsToProps = (dispatch) => {\n  return {\n      getCompanyJobsites: (companyId) => dispatch(getCompanyJobsites(companyId))\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log('MapStateToProps: ', state)\n  return {\n      jobsiteState: state.jobsiteState,\n      userState: state.userState\n  }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(JobsiteList)","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteForm.js",["167","168"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { updateJobsiteForm} from '../../store/actions/JobsiteActions'\n\n// import Button from '../components/Button';\nimport TextInput from '../TextInput'\nimport { __CreateJobsite } from '../../services/JobsiteService';\n// import '../styles/SignUp.css'\n// import '../styles/Button.css'\n\nconst JobsiteForm = (props) => {\n    let history = useHistory()\n    const { toggleJobsiteModal } = props\n    const [form, setForm] = useState({\n        address_1: '',\n        address_2: '',\n        city: '',\n        state: '',\n        postalCode: '',\n        clientName: '',\n        user_id: props.userId,\n        company_id: props.companyId\n    })\n\n\n\n    const [formError, setFormError] = useState(false);\n\n    const formFieldChange = (e) => {\n        const fieldName = e.target.name;\n        const fieldValue = e.target.value;\n\n        setForm({ ...form, [fieldName]: fieldValue })\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        try {\n            const jobsiteResponse = await __CreateJobsite(form);\n            props.toggleModal()\n            props.setNeedsRefresh(true)\n            history.push('/home');\n        } catch (error) {\n            setFormError(true);\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n                <h1>Create Jobsite</h1>\n                <div className='form-inputs'>\n                    <label htmlFor='address_1' >\n                        Address 1\n            <TextInput\n                            type='text'\n                            name='address_1'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='address_2' >\n                        Address 2\n            <TextInput\n                            type='text'\n                            name='address_2'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='city' className='form-label'>\n                        City\n            <TextInput\n                            type='text'\n                            name='city'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='state' className='form-label'>\n                        State\n                    <TextInput\n                            type='text'\n                            name='state'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='clientName' className='form-label'>\n                        Client Name\n            <TextInput\n                            type='text'\n                            name='clientName'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n\n                <div>\n                    <button\n                        className='btns'\n                        buttonStyle='btn--outline'\n                        buttonSize='btn--large'\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n            <button onClick={toggleJobsiteModal}>Close</button>\n        </div>\n    );\n};\n\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        updateJobsiteForm: (formFields) => dispatch(updateJobsiteForm(formFields)),\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userState: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(JobsiteForm)\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationForm.js",["169","170","171","172","173"],"import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { NavLink, useHistory } from 'react-router-dom';\n\nimport { createSpecification, hideSpecForm } from '../../store/actions/JobsiteActions'\nimport TextInput from '../TextInput';\n\n\nconst SpecificationForm = (props) => {\n    let history = useHistory()\n    const { toggleModal } = props\n    const [formError, setFormError] = useState(false);\n    const [form, setForm] = useState({\n        title: '',\n        description: '',\n        user_id: props.userId,\n        jobsite_id: props.jobsiteId,\n        specificationImage: null\n    })\n\n\n    const formFieldChange = (e) => {\n        const fieldName = e.target.name;\n        const fieldValue = e.target.value;\n        setForm({ ...form, [fieldName]: e.target.type === 'file' ? e.target.files[0] : fieldValue })\n    }\n\n    const handleSubmit = async (event) => {\n        \n\n        event.preventDefault()\n        let formData = new FormData()\n        formData.append('title', form.title)\n        formData.append('description', form.description)\n        formData.append('user_id', form.user_id)\n        formData.append('jobsite_id', form.jobsite_id)\n        formData.append('specificationImage', form.specificationImage)\n        console.log(\"formData: \", form)\n\n        props.createSpecification(formData);\n\n    }\n\n    return (\n        <div className='form-container'>\n            <form className='form-content-right' onSubmit={(e) => handleSubmit(e)}>\n                <h1>Add Specification</h1>\n                <div className='form-inputs'>\n                    <label htmlFor='title' >\n                        Title\n            <TextInput\n                            type='text'\n                            name='title'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <div className='form-inputs'>\n                    <label htmlFor='description' >\n                        Description\n            <TextInput\n                            type='text'\n                            name='description'\n                            className='form-input'\n                            onChange={formFieldChange}\n                        />\n                    </label>\n                </div>\n                <input\n                    type=\"file\"\n                    placeholder=\"Upload A File\"\n                    name=\"specificationImage\"\n                    // value={newPerson.profileImage}\n                    // value={fileName || \"\"}\n                    onChange={formFieldChange}\n                />\n                <div>\n                    <button\n                        className='btns'\n                        buttonStyle='btn--outline'\n                        buttonSize='btn--large'\n                    >\n                        Submit\n                    </button>\n                </div>\n\n            </form>\n            <button onClick={props.hideSpecForm}>Close</button>\n        </div>\n    )\n}\n\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        createSpecification: (formData) => dispatch(createSpecification(formData)),\n        hideSpecForm: () => dispatch(hideSpecForm())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        jobsiteState: state.jobsiteState,\n        userState: state.userState,\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SpecificationForm)\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationsList.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/SimpleMap.js",["174"],"import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle, faWrench } from \"@fortawesome/free-solid-svg-icons\";\n \nconst AnyReactComponent = ({ text }) => <div style={{color: 'red', fontWeight: \"bold\"}}>\n                  <FontAwesomeIcon\n                className=\"fas fa-white jobsite-wrench\"\n                icon={faWrench}\n            />\n</div>;\n \nclass SimpleMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 40.73,\n      lng: -73.93\n    },\n    zoom: 15\n  };\n \n  render() {\n    return (\n      // Important! Always set the container height explicitly\n      // <div style={{ height: '75vh', width: '50%' }}>\n      <div className='jobsite-map'>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyD85Z18nGa_s6LWTdVZCmozaVWFRqHM8KQ', language: 'en' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <AnyReactComponent\n            lat={this.props.center.lat}\n            lng={this.props.center.lng}\n            // text=\"Jobsite\"\n          />\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n \nexport default SimpleMap;","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/modals/Modal.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/UserService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/SignOut.js",["175"],"import React from \"react\";\nimport { Redirect } from 'react-router'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../store/actions/UserActions'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSignOutAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SignOut = (props) => {\n    \n    if (props.userState.user === null) {\n        { console.log(\"HIT Signed Out\") }\n        < Redirect to='/' push={true} />\n    } else {\n        return (\n            <button\n                className={'btn-list'}\n                onClick={(e) => props.logoutUser()}\n            >\n                <FontAwesomeIcon\n                    className=\"fas fa-white\"\n                    icon={faSignOutAlt}\n                    inverse\n                />\n            </button>\n        );\n    }\n};\n\nconst mapActionsToProps = (dispatch) => {\n    return {\n        logoutUser: () => dispatch(logoutUser()),\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        userState: state.userState\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(SignOut)","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/specifications/SpecificationCard.js",["176","177","178"],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/components/jobsites/JobsiteCard.js",["179","180"],"import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default (props) => {\n\n    const { jobsite, user } = props\n    let history = useHistory()\n    console.log(\"Jobsite props: \", jobsite.id)\n\n    \n    if (jobsite !== null && jobsite !== undefined) {\n        return (\n            <div>\n                {jobsite.address_1}\n                <FontAwesomeIcon\n                    className=\"fas fa-white\"\n                    icon={faTimesCircle}\n                />\n                <button onClick={() => history.push(`/jobsites/${jobsite.id}`)}>Read More</button>\n            </div>\n        )\n    } else {\n        return null\n    }\n}\n","/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/JobsiteService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/ApiClient.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/services/SpecificationService.js",[],"/Users/Bingo/general-assembly/unit4/project/BuildSightPro/client/src/store/actions/SpecificationActions.js",["181"],"import {\n  __AcknowledgeSpecification,\n  __CreateSpecification\n} from '../../services/SpecificationService'\n\nimport { \n  // GET_ENTITIES, \n  // GET_ENTITY, \n  ACKNOWLEDGE_SPECIFICATION\n} from '../types'\n\n// export const getGetSpecifications = () => async (dispatch) => {\n//   try{\n//     const entities = await __GetJobsites()\n//     dispatch({\n//       type: GET_ENTITIES,\n//       payload: entities\n//     })\n//   }catch(error){\n//     throw error\n//   }\n// }\n\n// export const getGetJobsite = () => async (dispatch) => {\n//   try{\n//     const entity = await __GetJobsite()\n//     dispatch({\n//       type: GET_ENTITY,\n//       payload: entity\n//     })\n//   }catch(error){\n//     throw error\n//   }\n// }\n\n\nexport const acknowledgeSpecification = () => async (dispatch) => {\n  try{\n    const entity = await __AcknowledgeSpecification()\n    dispatch({\n      type: ACKNOWLEDGE_SPECIFICATION,\n      payload: entity\n    })\n  }catch(error){\n    throw error\n  }\n}",{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"190","line":2,"column":3,"nodeType":"188","messageId":"189","endLine":2,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":4,"column":1,"nodeType":"193","endLine":12,"endColumn":2},{"ruleId":"186","severity":1,"message":"194","line":16,"column":9,"nodeType":"188","messageId":"189","endLine":16,"endColumn":10},{"ruleId":"195","severity":1,"message":"196","line":22,"column":8,"nodeType":"197","endLine":22,"endColumn":85,"suggestions":"198"},{"ruleId":"186","severity":1,"message":"199","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"199","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":1,"column":28,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"200","line":15,"column":19,"nodeType":"188","messageId":"189","endLine":15,"endColumn":29},{"ruleId":"186","severity":1,"message":"201","line":16,"column":10,"nodeType":"188","messageId":"189","endLine":16,"endColumn":19},{"ruleId":"202","severity":1,"message":"203","line":21,"column":5,"nodeType":"204","messageId":"205","endLine":34,"endColumn":6},{"ruleId":"191","severity":1,"message":"192","line":5,"column":1,"nodeType":"193","endLine":18,"endColumn":2},{"ruleId":"186","severity":1,"message":"206","line":5,"column":3,"nodeType":"188","messageId":"189","endLine":5,"endColumn":15},{"ruleId":"195","severity":1,"message":"207","line":12,"column":4,"nodeType":"197","endLine":12,"endColumn":43,"suggestions":"208"},{"ruleId":"186","severity":1,"message":"201","line":28,"column":12,"nodeType":"188","messageId":"189","endLine":28,"endColumn":21},{"ruleId":"186","severity":1,"message":"209","line":41,"column":19,"nodeType":"188","messageId":"189","endLine":41,"endColumn":34},{"ruleId":"186","severity":1,"message":"210","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":17},{"ruleId":"186","severity":1,"message":"211","line":10,"column":9,"nodeType":"188","messageId":"189","endLine":10,"endColumn":16},{"ruleId":"186","severity":1,"message":"212","line":11,"column":13,"nodeType":"188","messageId":"189","endLine":11,"endColumn":24},{"ruleId":"186","severity":1,"message":"201","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":21},{"ruleId":"186","severity":1,"message":"213","line":12,"column":23,"nodeType":"188","messageId":"189","endLine":12,"endColumn":35},{"ruleId":"186","severity":1,"message":"214","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":23},{"ruleId":"215","severity":1,"message":"216","line":12,"column":9,"nodeType":"217","messageId":"218","endLine":12,"endColumn":42},{"ruleId":"186","severity":1,"message":"214","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":23},{"ruleId":"219","severity":1,"message":"220","line":19,"column":17,"nodeType":"221","endLine":19,"endColumn":71},{"ruleId":"222","severity":1,"message":"223","line":27,"column":90,"nodeType":"224","messageId":"225","endLine":27,"endColumn":92},{"ruleId":"191","severity":1,"message":"192","line":6,"column":1,"nodeType":"193","endLine":27,"endColumn":2},{"ruleId":"186","severity":1,"message":"226","line":8,"column":22,"nodeType":"188","messageId":"189","endLine":8,"endColumn":26},{"ruleId":"186","severity":1,"message":"227","line":3,"column":3,"nodeType":"188","messageId":"189","endLine":3,"endColumn":24},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ACKNOWLEDGE_SPECIFICATION' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'x' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'jobsite_id' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["230"],"'useEffect' is defined but never used.","'setZipCode' is assigned a value but never used.","'formError' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'__LogoutUser' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["231"],"'jobsiteResponse' is assigned a value but never used.","'NavLink' is defined but never used.","'history' is assigned a value but never used.","'toggleModal' is assigned a value but never used.","'setFormError' is assigned a value but never used.","'faTimesCircle' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'__CreateSpecification' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},"Update the dependencies array to be: [jobsite_id, props, props.jobsiteState.refreshJobsite, props.specificationState.displaySpecForm]",{"range":"236","text":"237"},"Update the dependencies array to be: [props, props.jobsiteState.refreshJobsiteList]",{"range":"238","text":"239"},[902,979],"[jobsite_id, props, props.jobsiteState.refreshJobsite, props.specificationState.displaySpecForm]",[371,410],"[props, props.jobsiteState.refreshJobsiteList]"]